#!/usr/bin/env bash

indent() {
    sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BUILD_APP=$(cat "${ENV_DIR}/BUILD_APP")
BUILD_APP_START=$(cat "${ENV_DIR}/BUILD_APP_START")
BUILD_START=$(cat "${ENV_DIR}/BUILD_START")

if [[ -z "${BUILD_APP}" ]]; then
    echo "BUILD_APP was not set. Aborting" | indent
    exit 1
fi

declare -a SCRIPTS=(
  ".scripts.build = \"$BUILD_APP\""
  ".scripts.start = \"$BUILD_START\""
  ".scripts.\"start:prod\"=\"$BUILD_START\""
)

echo 'Patching package.json...'

for ((i = 0; i < ${#SCRIPTS[@]}; i++))
do
  SCRIPT="${SCRIPTS[$i]}"
  echo "Patch jq command: '$SCRIPT'" | indent
  CMD="jq '$SCRIPT' ${BUILD_DIR}/package.json > ${BUILD_DIR}/tmp.$$.json && mv ${BUILD_DIR}/tmp.$$.json ${BUILD_DIR}/package.json"
  #echo $CMD
  eval "$CMD"
done

cd $BUILD_DIR

echo "Installing dependencies..."
npm install --legacy-peer-deps

echo "Running Nx build..."
npm run build $BUILD_APP

echo "Set up ${BUILD_APP} to be started from package.json" | indent